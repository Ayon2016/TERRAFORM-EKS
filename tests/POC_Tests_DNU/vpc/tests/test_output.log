TestIAMPoliciesWorkerNodes 2023-07-04T15:16:45-04:00 retry.go:91: terraform [init -upgrade=false]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:45-04:00 logger.go:66: Running command terraform with args [init -upgrade=false]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:45-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:45-04:00 logger.go:66: [0m[1mInitializing the backend...[0m
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:46-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:46-04:00 logger.go:66: [0m[1mInitializing provider plugins...[0m
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:46-04:00 logger.go:66: - Reusing previous version of hashicorp/aws from the dependency lock file
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: - Using previously-installed hashicorp/aws v5.4.0
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: [0m[32m
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: You may now begin working with Terraform. Try running "terraform plan" to see
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: any changes that are required for your infrastructure. All Terraform commands
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: should now work.
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: If you ever set or change modules or backend configuration for Terraform,
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: rerun this command to reinitialize your working directory. If you forget, other
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: commands will detect it and remind you to do so if necessary.[0m
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 retry.go:91: terraform [plan -input=false -lock=false -lock=false -out=/Users/ayon.choudhury/Desktop/Terraform-EKS/vpc/tests/plan.out]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:47-04:00 logger.go:66: Running command terraform with args [plan -input=false -lock=false -lock=false -out=/Users/ayon.choudhury/Desktop/Terraform-EKS/vpc/tests/plan.out]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:51-04:00 logger.go:66: [0m[1mdata.aws_availability_zones.available: Reading...[0m[0m
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:51-04:00 logger.go:66: [0m[1mdata.aws_availability_zones.available: Read complete after 0s [id=us-west-2][0m
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:51-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:51-04:00 logger.go:66: Terraform used the selected providers to generate the following execution
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: plan. Resource actions are indicated with the following symbols:
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:   [32m+[0m create[0m
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: Terraform will perform the following actions:
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_eip.main[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_eip" "main" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m allocation_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m association_id       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m carrier_ip           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m customer_owned_ip    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m domain               = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m instance             = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m network_border_group = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m network_interface    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m private_dns          = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m private_ip           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m public_dns           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m public_ip            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m public_ipv4_pool     = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                 = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-ngw-ip"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all             = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-ngw-ip"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc                  = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_eks_cluster.this[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_eks_cluster" "this" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m certificate_authority = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cluster_id            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m created_at            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m endpoint              = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m identity              = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name                  = "TFEKSWorkshop-cluster"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m platform_version      = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m role_arn              = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m status                = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                  = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Environment" = "Development"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Owner"       = "Ayon Choudhury"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Project"     = "TerraformEKSWorkshop"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all              = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Environment" = "Development"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Owner"       = "Ayon Choudhury"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Project"     = "TerraformEKSWorkshop"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m version               = "1.21"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_config {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m cluster_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m endpoint_private_access   = true
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m endpoint_public_access    = true
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m public_access_cidrs       = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m "0.0.0.0/0",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:             ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m subnet_ids                = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m vpc_id                    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_eks_node_group.mynodeGroup[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_eks_node_group" "mynodeGroup" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ami_type               = "AL2_x86_64"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m capacity_type          = "ON_DEMAND"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cluster_name           = "TFEKSWorkshop-cluster"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m disk_size              = 20
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                     = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m instance_types         = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "t2.medium",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m node_group_name        = "TFEKSWorkshop"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m node_group_name_prefix = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m node_role_arn          = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m release_version        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m resources              = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m status                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m subnet_ids             = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                   = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Environment" = "Development"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Owner"       = "Ayon Choudhury"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Project"     = "TerraformEKSWorkshop"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all               = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Environment" = "Development"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Owner"       = "Ayon Choudhury"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Project"     = "TerraformEKSWorkshop"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m version                = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m scaling_config {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m desired_size = 2
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m max_size     = 5
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m min_size     = 1
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_iam_role.cluster[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_iam_role" "cluster" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m assume_role_policy    = jsonencode(
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:             {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m Statement = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                   [32m+[0m[0m {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                       [32m+[0m[0m Action    = "sts:AssumeRole"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                       [32m+[0m[0m Effect    = "Allow"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                       [32m+[0m[0m Principal = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                           [32m+[0m[0m Service = "eks.amazonaws.com"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                     },
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                 ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m Version   = "2012-10-17"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:             }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         )
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m create_date           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m force_detach_policies = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m managed_policy_arns   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m max_session_duration  = 3600
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name                  = "TFEKSWorkshop-Cluster-Role"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name_prefix           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m path                  = "/"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all              = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m unique_id             = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_iam_role.node[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_iam_role" "node" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m assume_role_policy    = jsonencode(
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:             {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m Statement = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                   [32m+[0m[0m {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                       [32m+[0m[0m Action    = "sts:AssumeRole"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                       [32m+[0m[0m Effect    = "Allow"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                       [32m+[0m[0m Principal = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                           [32m+[0m[0m Service = "ec2.amazonaws.com"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                     },
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                 ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m Version   = "2012-10-17"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:             }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         )
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m create_date           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m force_detach_policies = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m managed_policy_arns   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m max_session_duration  = 3600
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name                  = "TFEKSWorkshop-Worker-Role"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name_prefix           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m path                  = "/"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all              = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m unique_id             = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_AmazonEKSClusterPolicy" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id         = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m role       = "TFEKSWorkshop-Cluster-Role"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_AmazonEC2ContainerRegistryReadOnly" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id         = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m role       = "TFEKSWorkshop-Worker-Role"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_AmazonEKSWorkerNodePolicy" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id         = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m role       = "TFEKSWorkshop-Worker-Role"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_AmazonEKS_CNI_Policy" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id         = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m role       = "TFEKSWorkshop-Worker-Role"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_internet_gateway.this[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_internet_gateway" "this" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn      = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags     = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-igw"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-igw"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_nat_gateway.main[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_nat_gateway" "main" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m allocation_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m association_id       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m connectivity_type    = "public"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m network_interface_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m private_ip           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m public_ip            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m subnet_id            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                 = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-ngw"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all             = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-ngw"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_route.main[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_route" "main" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                     = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m instance_id            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m instance_owner_id      = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m nat_gateway_id         = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m network_interface_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m origin                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m route_table_id         = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m state                  = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_route_table.main[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_route_table" "main" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn              = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id               = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id         = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m propagating_vgws = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m route            = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m carrier_gateway_id         = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m core_network_arn           = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m destination_prefix_list_id = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m egress_only_gateway_id     = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m gateway_id                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m ipv6_cidr_block            = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m local_gateway_id           = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m nat_gateway_id             = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m network_interface_id       = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m transit_gateway_id         = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m vpc_endpoint_id            = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m vpc_peering_connection_id  = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:             },
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags             = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-Default-rt"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all         = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-Default-rt"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_id           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_route_table_association.internet_access[0][0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_route_table_association" "internet_access" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id             = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m route_table_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m subnet_id      = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_route_table_association.internet_access[1][0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_route_table_association" "internet_access" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id             = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m route_table_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m subnet_id      = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group.control_plane_sg[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group" "control_plane_sg" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m description            = "Managed by Terraform"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m egress                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                     = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ingress                = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name                   = "TFEKSWorkshop-ControlPlane-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name_prefix            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id               = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m revoke_rules_on_delete = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                   = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-ControlPlane-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all               = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-ControlPlane-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_id                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group.data_plane_sg[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group" "data_plane_sg" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m description            = "Managed by Terraform"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m egress                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                     = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ingress                = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name                   = "TFEKSWorkshop-Worker-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name_prefix            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id               = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m revoke_rules_on_delete = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                   = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-Worker-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all               = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-Worker-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_id                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group.eks_cluster[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group" "eks_cluster" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m description            = "Cluster communication with worker nodes"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m egress                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                     = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ingress                = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name                   = "TFEKSWorkshop-cluster-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name_prefix            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id               = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m revoke_rules_on_delete = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                   = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-cluster-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all               = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-cluster-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_id                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group.eks_nodes[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group" "eks_nodes" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m description            = "Security group for all nodes in the cluster"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m egress                 = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m cidr_blocks      = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                   [32m+[0m[0m "0.0.0.0/0",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:                 ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m description      = ""
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m from_port        = 0
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m ipv6_cidr_blocks = []
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m prefix_list_ids  = []
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m protocol         = "-1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m security_groups  = []
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m self             = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:               [32m+[0m[0m to_port          = 0
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:             },
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                     = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ingress                = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name                   = "TFEKSWorkshop-node-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name_prefix            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id               = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m revoke_rules_on_delete = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                   = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-node-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "owned"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all               = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-node-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "owned"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_id                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group.public_sg[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group" "public_sg" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                    = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m description            = "Managed by Terraform"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m egress                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                     = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ingress                = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name                   = "TFEKSWorkshop-Public-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m name_prefix            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id               = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m revoke_rules_on_delete = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                   = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-Public-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all               = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name" = "TFEKSWorkshop-Public-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_id                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.cluster_inbound[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "cluster_inbound" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m description              = "Allow worker nodes to communicate with the cluster API Server"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 443
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "tcp"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 443
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "ingress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.cluster_outbound[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "cluster_outbound" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m description              = "Allow cluster API Server to communicate with the worker nodes"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 1024
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "tcp"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 65535
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "egress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.control_plane_inbound[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "control_plane_inbound" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_blocks              = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "10.0.0.0/24",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "10.0.1.0/24",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "10.0.2.0/24",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "10.0.3.0/24",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 0
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "tcp"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 65535
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "ingress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.control_plane_outbound[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "control_plane_outbound" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_blocks              = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "0.0.0.0/0",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 0
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "-1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 65535
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "egress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.node_outbound[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "node_outbound" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_blocks              = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "0.0.0.0/0",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 0
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "-1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 0
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "egress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.nodes[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "nodes" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_blocks              = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "10.0.0.0/24",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "10.0.1.0/24",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "10.0.2.0/24",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "10.0.3.0/24",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m description              = "Allow nodes to communicate with each other"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 0
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "-1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 65535
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "ingress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.nodes_cluster_inbound[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "nodes_cluster_inbound" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m description              = "Allow worker Kubelets and pods to receive communication from the cluster control plane"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 1025
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "tcp"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 65535
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "ingress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.nodes_inbound[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "nodes_inbound" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_blocks              = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "10.0.2.0/24",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "10.0.3.0/24",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m description              = "Allow worker Kubelets and pods to receive communication from the cluster control plane"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 1025
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "tcp"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 65535
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "ingress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.nodes_internal[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "nodes_internal" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m description              = "Allow nodes to communicate with each other"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 0
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "-1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 65535
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "ingress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.sg_egress_public[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "sg_egress_public" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_blocks              = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "0.0.0.0/0",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 0
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "-1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 0
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "egress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.sg_ingress_public_443[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "sg_ingress_public_443" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_blocks              = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "0.0.0.0/0",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 443
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "tcp"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 443
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "ingress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_security_group_rule.sg_ingress_public_80[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_security_group_rule" "sg_ingress_public_80" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_blocks              = [
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "0.0.0.0/0",
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         ]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m from_port                = 80
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m protocol                 = "tcp"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_id        = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m security_group_rule_id   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m self                     = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m source_security_group_id = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m to_port                  = 80
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m type                     = "ingress"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_subnet.private[0][0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_subnet" "private" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                                            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m assign_ipv6_address_on_creation                = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m availability_zone                              = "us-west-2a"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m availability_zone_id                           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_dns64                                   = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                                             = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ipv6_native                                    = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m map_public_ip_on_launch                        = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id                                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                                           = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-private-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "shared"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/role/internal-elb"             = "1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all                                       = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-private-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "shared"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/role/internal-elb"             = "1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_id                                         = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_subnet.private[1][0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_subnet" "private" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                                            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m assign_ipv6_address_on_creation                = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m availability_zone                              = "us-west-2b"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m availability_zone_id                           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_dns64                                   = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                                             = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ipv6_native                                    = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m map_public_ip_on_launch                        = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id                                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                                           = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-private-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "shared"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/role/internal-elb"             = "1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all                                       = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-private-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "shared"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/role/internal-elb"             = "1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_id                                         = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_subnet.public[0][0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_subnet" "public" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                                            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m assign_ipv6_address_on_creation                = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m availability_zone                              = "us-west-2a"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m availability_zone_id                           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_block                                     = "10.0.0.0/24"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_dns64                                   = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                                             = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ipv6_native                                    = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m map_public_ip_on_launch                        = true
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id                                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                                           = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-public-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "shared"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/role/elb"                      = "1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all                                       = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-public-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "shared"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/role/elb"                      = "1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_id                                         = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_subnet.public[1][0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_subnet" "public" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                                            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m assign_ipv6_address_on_creation                = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m availability_zone                              = "us-west-2b"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m availability_zone_id                           = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_dns64                                   = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                                             = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ipv6_native                                    = false
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m map_public_ip_on_launch                        = true
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id                                       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                                           = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-public-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "shared"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/role/elb"                      = "1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all                                       = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-public-sg"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "shared"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/role/elb"                      = "1"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m vpc_id                                         = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1m  # aws_vpc.this[0m will be created
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m  [32m+[0m[0m resource "aws_vpc" "this" {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m arn                                  = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m default_network_acl_id               = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m default_route_table_id               = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m default_security_group_id            = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m dhcp_options_id                      = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_dns_hostnames                 = true
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_dns_support                   = true
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m id                                   = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m instance_tenancy                     = "default"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ipv6_association_id                  = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m main_route_table_id                  = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m owner_id                             = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags                                 = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-vpc"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "shared"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:       [32m+[0m[0m tags_all                             = {
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "Name"                                        = "TFEKSWorkshop-vpc"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:           [32m+[0m[0m "kubernetes.io/cluster/TFEKSWorkshop-cluster" = "shared"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:         }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     }
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [1mPlan:[0m 37 to add, 0 to change, 0 to destroy.
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [0m
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: Changes to Outputs:
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:   [32m+[0m[0m cluster_ca_certificate = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:   [32m+[0m[0m cluster_endpoint       = (known after apply)
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:   [32m+[0m[0m cluster_name           = "TFEKSWorkshop-cluster"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: [90m
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: ─────────────────────────────────────────────────────────────────────────────[0m
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: Saved the plan to:
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: /Users/ayon.choudhury/Desktop/Terraform-EKS/vpc/tests/plan.out
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: 
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: To perform exactly these actions, run the following command to apply:
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66:     terraform apply "/Users/ayon.choudhury/Desktop/Terraform-EKS/vpc/tests/plan.out"
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 retry.go:91: terraform [show -no-color -json /Users/ayon.choudhury/Desktop/Terraform-EKS/vpc/tests/plan.out]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:52-04:00 logger.go:66: Running command terraform with args [show -no-color -json /Users/ayon.choudhury/Desktop/Terraform-EKS/vpc/tests/plan.out]
TestIAMPoliciesWorkerNodes 2023-07-04T15:16:53-04:00 logger.go:66: {"format_version":"1.2","terraform_version":"1.5.0","variables":{"availability_zones_count":{"value":2},"aws_access_key":{"value":"AKIATYFUKRRA5KJ5T7B5"},"aws_secret_key":{"value":"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"},"project":{"value":"TFEKSWorkshop"},"region":{"value":"us-west-2"},"subnet_cidr_bits":{"value":8},"tags":{"value":{"Environment":"Development","Owner":"Ayon Choudhury","Project":"TerraformEKSWorkshop"}},"vpc_cidr":{"value":"10.0.0.0/16"}},"planned_values":{"outputs":{"cluster_ca_certificate":{"sensitive":false},"cluster_endpoint":{"sensitive":false},"cluster_name":{"sensitive":false,"type":"string","value":"TFEKSWorkshop-cluster"}},"root_module":{"resources":[{"address":"aws_eip.main","mode":"managed","type":"aws_eip","name":"main","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"address":null,"associate_with_private_ip":null,"customer_owned_ipv4_pool":null,"tags":{"Name":"TFEKSWorkshop-ngw-ip"},"tags_all":{"Name":"TFEKSWorkshop-ngw-ip"},"timeouts":null},"sensitive_values":{"tags":{},"tags_all":{}}},{"address":"aws_eks_cluster.this","mode":"managed","type":"aws_eks_cluster","name":"this","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"enabled_cluster_log_types":null,"encryption_config":[],"name":"TFEKSWorkshop-cluster","outpost_config":[],"tags":{"Environment":"Development","Owner":"Ayon Choudhury","Project":"TerraformEKSWorkshop"},"tags_all":{"Environment":"Development","Owner":"Ayon Choudhury","Project":"TerraformEKSWorkshop"},"timeouts":null,"version":"1.21","vpc_config":[{"endpoint_private_access":true,"endpoint_public_access":true,"public_access_cidrs":["0.0.0.0/0"],"security_group_ids":null}]},"sensitive_values":{"certificate_authority":[],"encryption_config":[],"identity":[],"kubernetes_network_config":[],"outpost_config":[],"tags":{},"tags_all":{},"vpc_config":[{"public_access_cidrs":[false],"subnet_ids":[]}]}},{"address":"aws_eks_node_group.mynodeGroup","mode":"managed","type":"aws_eks_node_group","name":"mynodeGroup","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"ami_type":"AL2_x86_64","capacity_type":"ON_DEMAND","cluster_name":"TFEKSWorkshop-cluster","disk_size":20,"force_update_version":null,"instance_types":["t2.medium"],"labels":null,"launch_template":[],"node_group_name":"TFEKSWorkshop","remote_access":[],"scaling_config":[{"desired_size":2,"max_size":5,"min_size":1}],"tags":{"Environment":"Development","Owner":"Ayon Choudhury","Project":"TerraformEKSWorkshop"},"tags_all":{"Environment":"Development","Owner":"Ayon Choudhury","Project":"TerraformEKSWorkshop"},"taint":[],"timeouts":null},"sensitive_values":{"instance_types":[false],"launch_template":[],"remote_access":[],"resources":[],"scaling_config":[{}],"subnet_ids":[],"tags":{},"tags_all":{},"taint":[],"update_config":[]}},{"address":"aws_iam_role.cluster","mode":"managed","type":"aws_iam_role","name":"cluster","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"assume_role_policy":"{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}","description":null,"force_detach_policies":false,"max_session_duration":3600,"name":"TFEKSWorkshop-Cluster-Role","path":"/","permissions_boundary":null,"tags":null},"sensitive_values":{"inline_policy":[],"managed_policy_arns":[],"tags_all":{}}},{"address":"aws_iam_role.node","mode":"managed","type":"aws_iam_role","name":"node","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"assume_role_policy":"{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}","description":null,"force_detach_policies":false,"max_session_duration":3600,"name":"TFEKSWorkshop-Worker-Role","path":"/","permissions_boundary":null,"tags":null},"sensitive_values":{"inline_policy":[],"managed_policy_arns":[],"tags_all":{}}},{"address":"aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy","mode":"managed","type":"aws_iam_role_policy_attachment","name":"cluster_AmazonEKSClusterPolicy","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"policy_arn":"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy","role":"TFEKSWorkshop-Cluster-Role"},"sensitive_values":{}},{"address":"aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly","mode":"managed","type":"aws_iam_role_policy_attachment","name":"node_AmazonEC2ContainerRegistryReadOnly","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"policy_arn":"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly","role":"TFEKSWorkshop-Worker-Role"},"sensitive_values":{}},{"address":"aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy","mode":"managed","type":"aws_iam_role_policy_attachment","name":"node_AmazonEKSWorkerNodePolicy","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"policy_arn":"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy","role":"TFEKSWorkshop-Worker-Role"},"sensitive_values":{}},{"address":"aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy","mode":"managed","type":"aws_iam_role_policy_attachment","name":"node_AmazonEKS_CNI_Policy","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"policy_arn":"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy","role":"TFEKSWorkshop-Worker-Role"},"sensitive_values":{}},{"address":"aws_internet_gateway.this","mode":"managed","type":"aws_internet_gateway","name":"this","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"tags":{"Name":"TFEKSWorkshop-igw"},"tags_all":{"Name":"TFEKSWorkshop-igw"},"timeouts":null},"sensitive_values":{"tags":{},"tags_all":{}}},{"address":"aws_nat_gateway.main","mode":"managed","type":"aws_nat_gateway","name":"main","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"connectivity_type":"public","tags":{"Name":"TFEKSWorkshop-ngw"},"tags_all":{"Name":"TFEKSWorkshop-ngw"}},"sensitive_values":{"tags":{},"tags_all":{}}},{"address":"aws_route.main","mode":"managed","type":"aws_route","name":"main","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"carrier_gateway_id":null,"core_network_arn":null,"destination_cidr_block":"0.0.0.0/0","destination_ipv6_cidr_block":null,"destination_prefix_list_id":null,"egress_only_gateway_id":null,"gateway_id":null,"local_gateway_id":null,"timeouts":null,"transit_gateway_id":null,"vpc_endpoint_id":null,"vpc_peering_connection_id":null},"sensitive_values":{}},{"address":"aws_route_table.main","mode":"managed","type":"aws_route_table","name":"main","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"route":[{"carrier_gateway_id":"","cidr_block":"0.0.0.0/0","core_network_arn":"","destination_prefix_list_id":"","egress_only_gateway_id":"","ipv6_cidr_block":"","local_gateway_id":"","nat_gateway_id":"","network_interface_id":"","transit_gateway_id":"","vpc_endpoint_id":"","vpc_peering_connection_id":""}],"tags":{"Name":"TFEKSWorkshop-Default-rt"},"tags_all":{"Name":"TFEKSWorkshop-Default-rt"},"timeouts":null},"sensitive_values":{"propagating_vgws":[],"route":[{}],"tags":{},"tags_all":{}}},{"address":"aws_route_table_association.internet_access[0]","mode":"managed","type":"aws_route_table_association","name":"internet_access","index":0,"provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"gateway_id":null,"timeouts":null},"sensitive_values":{}},{"address":"aws_route_table_association.internet_access[1]","mode":"managed","type":"aws_route_table_association","name":"internet_access","index":1,"provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"gateway_id":null,"timeouts":null},"sensitive_values":{}},{"address":"aws_security_group.control_plane_sg","mode":"managed","type":"aws_security_group","name":"control_plane_sg","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":1,"values":{"description":"Managed by Terraform","name":"TFEKSWorkshop-ControlPlane-sg","revoke_rules_on_delete":false,"tags":{"Name":"TFEKSWorkshop-ControlPlane-sg"},"tags_all":{"Name":"TFEKSWorkshop-ControlPlane-sg"},"timeouts":null},"sensitive_values":{"egress":[],"ingress":[],"tags":{},"tags_all":{}}},{"address":"aws_security_group.data_plane_sg","mode":"managed","type":"aws_security_group","name":"data_plane_sg","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":1,"values":{"description":"Managed by Terraform","name":"TFEKSWorkshop-Worker-sg","revoke_rules_on_delete":false,"tags":{"Name":"TFEKSWorkshop-Worker-sg"},"tags_all":{"Name":"TFEKSWorkshop-Worker-sg"},"timeouts":null},"sensitive_values":{"egress":[],"ingress":[],"tags":{},"tags_all":{}}},{"address":"aws_security_group.eks_cluster","mode":"managed","type":"aws_security_group","name":"eks_cluster","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":1,"values":{"description":"Cluster communication with worker nodes","name":"TFEKSWorkshop-cluster-sg","revoke_rules_on_delete":false,"tags":{"Name":"TFEKSWorkshop-cluster-sg"},"tags_all":{"Name":"TFEKSWorkshop-cluster-sg"},"timeouts":null},"sensitive_values":{"egress":[],"ingress":[],"tags":{},"tags_all":{}}},{"address":"aws_security_group.eks_nodes","mode":"managed","type":"aws_security_group","name":"eks_nodes","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":1,"values":{"description":"Security group for all nodes in the cluster","egress":[{"cidr_blocks":["0.0.0.0/0"],"description":"","from_port":0,"ipv6_cidr_blocks":[],"prefix_list_ids":[],"protocol":"-1","security_groups":[],"self":false,"to_port":0}],"name":"TFEKSWorkshop-node-sg","revoke_rules_on_delete":false,"tags":{"Name":"TFEKSWorkshop-node-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"owned"},"tags_all":{"Name":"TFEKSWorkshop-node-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"owned"},"timeouts":null},"sensitive_values":{"egress":[{"cidr_blocks":[false],"ipv6_cidr_blocks":[],"prefix_list_ids":[],"security_groups":[]}],"ingress":[],"tags":{},"tags_all":{}}},{"address":"aws_security_group.public_sg","mode":"managed","type":"aws_security_group","name":"public_sg","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":1,"values":{"description":"Managed by Terraform","name":"TFEKSWorkshop-Public-sg","revoke_rules_on_delete":false,"tags":{"Name":"TFEKSWorkshop-Public-sg"},"tags_all":{"Name":"TFEKSWorkshop-Public-sg"},"timeouts":null},"sensitive_values":{"egress":[],"ingress":[],"tags":{},"tags_all":{}}},{"address":"aws_security_group_rule.cluster_inbound","mode":"managed","type":"aws_security_group_rule","name":"cluster_inbound","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":null,"description":"Allow worker nodes to communicate with the cluster API Server","from_port":443,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":443,"type":"ingress"},"sensitive_values":{}},{"address":"aws_security_group_rule.cluster_outbound","mode":"managed","type":"aws_security_group_rule","name":"cluster_outbound","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":null,"description":"Allow cluster API Server to communicate with the worker nodes","from_port":1024,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":65535,"type":"egress"},"sensitive_values":{}},{"address":"aws_security_group_rule.control_plane_inbound","mode":"managed","type":"aws_security_group_rule","name":"control_plane_inbound","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":["10.0.0.0/24","10.0.1.0/24","10.0.2.0/24","10.0.3.0/24"],"description":null,"from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":65535,"type":"ingress"},"sensitive_values":{"cidr_blocks":[false,false,false,false]}},{"address":"aws_security_group_rule.control_plane_outbound","mode":"managed","type":"aws_security_group_rule","name":"control_plane_outbound","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":["0.0.0.0/0"],"description":null,"from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"-1","self":false,"timeouts":null,"to_port":65535,"type":"egress"},"sensitive_values":{"cidr_blocks":[false]}},{"address":"aws_security_group_rule.node_outbound","mode":"managed","type":"aws_security_group_rule","name":"node_outbound","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":["0.0.0.0/0"],"description":null,"from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"-1","self":false,"timeouts":null,"to_port":0,"type":"egress"},"sensitive_values":{"cidr_blocks":[false]}},{"address":"aws_security_group_rule.nodes","mode":"managed","type":"aws_security_group_rule","name":"nodes","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":["10.0.0.0/24","10.0.1.0/24","10.0.2.0/24","10.0.3.0/24"],"description":"Allow nodes to communicate with each other","from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"-1","self":false,"timeouts":null,"to_port":65535,"type":"ingress"},"sensitive_values":{"cidr_blocks":[false,false,false,false]}},{"address":"aws_security_group_rule.nodes_cluster_inbound","mode":"managed","type":"aws_security_group_rule","name":"nodes_cluster_inbound","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":null,"description":"Allow worker Kubelets and pods to receive communication from the cluster control plane","from_port":1025,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":65535,"type":"ingress"},"sensitive_values":{}},{"address":"aws_security_group_rule.nodes_inbound","mode":"managed","type":"aws_security_group_rule","name":"nodes_inbound","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":["10.0.2.0/24","10.0.3.0/24"],"description":"Allow worker Kubelets and pods to receive communication from the cluster control plane","from_port":1025,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":65535,"type":"ingress"},"sensitive_values":{"cidr_blocks":[false,false]}},{"address":"aws_security_group_rule.nodes_internal","mode":"managed","type":"aws_security_group_rule","name":"nodes_internal","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":null,"description":"Allow nodes to communicate with each other","from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"-1","self":false,"timeouts":null,"to_port":65535,"type":"ingress"},"sensitive_values":{}},{"address":"aws_security_group_rule.sg_egress_public","mode":"managed","type":"aws_security_group_rule","name":"sg_egress_public","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":["0.0.0.0/0"],"description":null,"from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"-1","self":false,"timeouts":null,"to_port":0,"type":"egress"},"sensitive_values":{"cidr_blocks":[false]}},{"address":"aws_security_group_rule.sg_ingress_public_443","mode":"managed","type":"aws_security_group_rule","name":"sg_ingress_public_443","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":["0.0.0.0/0"],"description":null,"from_port":443,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":443,"type":"ingress"},"sensitive_values":{"cidr_blocks":[false]}},{"address":"aws_security_group_rule.sg_ingress_public_80","mode":"managed","type":"aws_security_group_rule","name":"sg_ingress_public_80","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":2,"values":{"cidr_blocks":["0.0.0.0/0"],"description":null,"from_port":80,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":80,"type":"ingress"},"sensitive_values":{"cidr_blocks":[false]}},{"address":"aws_subnet.private[0]","mode":"managed","type":"aws_subnet","name":"private","index":0,"provider_name":"registry.terraform.io/hashicorp/aws","schema_version":1,"values":{"assign_ipv6_address_on_creation":false,"availability_zone":"us-west-2a","cidr_block":"10.0.2.0/24","customer_owned_ipv4_pool":null,"enable_dns64":false,"enable_lni_at_device_index":null,"enable_resource_name_dns_a_record_on_launch":false,"enable_resource_name_dns_aaaa_record_on_launch":false,"ipv6_cidr_block":null,"ipv6_native":false,"map_customer_owned_ip_on_launch":null,"map_public_ip_on_launch":false,"outpost_arn":null,"tags":{"Name":"TFEKSWorkshop-private-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/internal-elb":"1"},"tags_all":{"Name":"TFEKSWorkshop-private-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/internal-elb":"1"},"timeouts":null},"sensitive_values":{"tags":{},"tags_all":{}}},{"address":"aws_subnet.private[1]","mode":"managed","type":"aws_subnet","name":"private","index":1,"provider_name":"registry.terraform.io/hashicorp/aws","schema_version":1,"values":{"assign_ipv6_address_on_creation":false,"availability_zone":"us-west-2b","cidr_block":"10.0.3.0/24","customer_owned_ipv4_pool":null,"enable_dns64":false,"enable_lni_at_device_index":null,"enable_resource_name_dns_a_record_on_launch":false,"enable_resource_name_dns_aaaa_record_on_launch":false,"ipv6_cidr_block":null,"ipv6_native":false,"map_customer_owned_ip_on_launch":null,"map_public_ip_on_launch":false,"outpost_arn":null,"tags":{"Name":"TFEKSWorkshop-private-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/internal-elb":"1"},"tags_all":{"Name":"TFEKSWorkshop-private-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/internal-elb":"1"},"timeouts":null},"sensitive_values":{"tags":{},"tags_all":{}}},{"address":"aws_subnet.public[0]","mode":"managed","type":"aws_subnet","name":"public","index":0,"provider_name":"registry.terraform.io/hashicorp/aws","schema_version":1,"values":{"assign_ipv6_address_on_creation":false,"availability_zone":"us-west-2a","cidr_block":"10.0.0.0/24","customer_owned_ipv4_pool":null,"enable_dns64":false,"enable_lni_at_device_index":null,"enable_resource_name_dns_a_record_on_launch":false,"enable_resource_name_dns_aaaa_record_on_launch":false,"ipv6_cidr_block":null,"ipv6_native":false,"map_customer_owned_ip_on_launch":null,"map_public_ip_on_launch":true,"outpost_arn":null,"tags":{"Name":"TFEKSWorkshop-public-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/elb":"1"},"tags_all":{"Name":"TFEKSWorkshop-public-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/elb":"1"},"timeouts":null},"sensitive_values":{"tags":{},"tags_all":{}}},{"address":"aws_subnet.public[1]","mode":"managed","type":"aws_subnet","name":"public","index":1,"provider_name":"registry.terraform.io/hashicorp/aws","schema_version":1,"values":{"assign_ipv6_address_on_creation":false,"availability_zone":"us-west-2b","cidr_block":"10.0.1.0/24","customer_owned_ipv4_pool":null,"enable_dns64":false,"enable_lni_at_device_index":null,"enable_resource_name_dns_a_record_on_launch":false,"enable_resource_name_dns_aaaa_record_on_launch":false,"ipv6_cidr_block":null,"ipv6_native":false,"map_customer_owned_ip_on_launch":null,"map_public_ip_on_launch":true,"outpost_arn":null,"tags":{"Name":"TFEKSWorkshop-public-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/elb":"1"},"tags_all":{"Name":"TFEKSWorkshop-public-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/elb":"1"},"timeouts":null},"sensitive_values":{"tags":{},"tags_all":{}}},{"address":"aws_vpc.this","mode":"managed","type":"aws_vpc","name":"this","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":1,"values":{"assign_generated_ipv6_cidr_block":null,"cidr_block":"10.0.0.0/16","enable_dns_hostnames":true,"enable_dns_support":true,"instance_tenancy":"default","ipv4_ipam_pool_id":null,"ipv4_netmask_length":null,"ipv6_ipam_pool_id":null,"ipv6_netmask_length":null,"tags":{"Name":"TFEKSWorkshop-vpc","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared"},"tags_all":{"Name":"TFEKSWorkshop-vpc","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared"}},"sensitive_values":{"tags":{},"tags_all":{}}}]}},"resource_changes":[{"address":"aws_eip.main","mode":"managed","type":"aws_eip","name":"main","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"address":null,"associate_with_private_ip":null,"customer_owned_ipv4_pool":null,"tags":{"Name":"TFEKSWorkshop-ngw-ip"},"tags_all":{"Name":"TFEKSWorkshop-ngw-ip"},"timeouts":null},"after_unknown":{"allocation_id":true,"association_id":true,"carrier_ip":true,"customer_owned_ip":true,"domain":true,"id":true,"instance":true,"network_border_group":true,"network_interface":true,"private_dns":true,"private_ip":true,"public_dns":true,"public_ip":true,"public_ipv4_pool":true,"tags":{},"tags_all":{},"vpc":true},"before_sensitive":false,"after_sensitive":{"tags":{},"tags_all":{}}}},{"address":"aws_eks_cluster.this","mode":"managed","type":"aws_eks_cluster","name":"this","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"enabled_cluster_log_types":null,"encryption_config":[],"name":"TFEKSWorkshop-cluster","outpost_config":[],"tags":{"Environment":"Development","Owner":"Ayon Choudhury","Project":"TerraformEKSWorkshop"},"tags_all":{"Environment":"Development","Owner":"Ayon Choudhury","Project":"TerraformEKSWorkshop"},"timeouts":null,"version":"1.21","vpc_config":[{"endpoint_private_access":true,"endpoint_public_access":true,"public_access_cidrs":["0.0.0.0/0"],"security_group_ids":null}]},"after_unknown":{"arn":true,"certificate_authority":true,"cluster_id":true,"created_at":true,"encryption_config":[],"endpoint":true,"id":true,"identity":true,"kubernetes_network_config":true,"outpost_config":[],"platform_version":true,"role_arn":true,"status":true,"tags":{},"tags_all":{},"vpc_config":[{"cluster_security_group_id":true,"public_access_cidrs":[false],"subnet_ids":true,"vpc_id":true}]},"before_sensitive":false,"after_sensitive":{"certificate_authority":[],"encryption_config":[],"identity":[],"kubernetes_network_config":[],"outpost_config":[],"tags":{},"tags_all":{},"vpc_config":[{"public_access_cidrs":[false],"subnet_ids":[]}]}}},{"address":"aws_eks_node_group.mynodeGroup","mode":"managed","type":"aws_eks_node_group","name":"mynodeGroup","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"ami_type":"AL2_x86_64","capacity_type":"ON_DEMAND","cluster_name":"TFEKSWorkshop-cluster","disk_size":20,"force_update_version":null,"instance_types":["t2.medium"],"labels":null,"launch_template":[],"node_group_name":"TFEKSWorkshop","remote_access":[],"scaling_config":[{"desired_size":2,"max_size":5,"min_size":1}],"tags":{"Environment":"Development","Owner":"Ayon Choudhury","Project":"TerraformEKSWorkshop"},"tags_all":{"Environment":"Development","Owner":"Ayon Choudhury","Project":"TerraformEKSWorkshop"},"taint":[],"timeouts":null},"after_unknown":{"arn":true,"id":true,"instance_types":[false],"launch_template":[],"node_group_name_prefix":true,"node_role_arn":true,"release_version":true,"remote_access":[],"resources":true,"scaling_config":[{}],"status":true,"subnet_ids":true,"tags":{},"tags_all":{},"taint":[],"update_config":true,"version":true},"before_sensitive":false,"after_sensitive":{"instance_types":[false],"launch_template":[],"remote_access":[],"resources":[],"scaling_config":[{}],"subnet_ids":[],"tags":{},"tags_all":{},"taint":[],"update_config":[]}}},{"address":"aws_iam_role.cluster","mode":"managed","type":"aws_iam_role","name":"cluster","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"assume_role_policy":"{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}","description":null,"force_detach_policies":false,"max_session_duration":3600,"name":"TFEKSWorkshop-Cluster-Role","path":"/","permissions_boundary":null,"tags":null},"after_unknown":{"arn":true,"create_date":true,"id":true,"inline_policy":true,"managed_policy_arns":true,"name_prefix":true,"tags_all":true,"unique_id":true},"before_sensitive":false,"after_sensitive":{"inline_policy":[],"managed_policy_arns":[],"tags_all":{}}}},{"address":"aws_iam_role.node","mode":"managed","type":"aws_iam_role","name":"node","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"assume_role_policy":"{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}","description":null,"force_detach_policies":false,"max_session_duration":3600,"name":"TFEKSWorkshop-Worker-Role","path":"/","permissions_boundary":null,"tags":null},"after_unknown":{"arn":true,"create_date":true,"id":true,"inline_policy":true,"managed_policy_arns":true,"name_prefix":true,"tags_all":true,"unique_id":true},"before_sensitive":false,"after_sensitive":{"inline_policy":[],"managed_policy_arns":[],"tags_all":{}}}},{"address":"aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy","mode":"managed","type":"aws_iam_role_policy_attachment","name":"cluster_AmazonEKSClusterPolicy","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"policy_arn":"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy","role":"TFEKSWorkshop-Cluster-Role"},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly","mode":"managed","type":"aws_iam_role_policy_attachment","name":"node_AmazonEC2ContainerRegistryReadOnly","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"policy_arn":"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly","role":"TFEKSWorkshop-Worker-Role"},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy","mode":"managed","type":"aws_iam_role_policy_attachment","name":"node_AmazonEKSWorkerNodePolicy","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"policy_arn":"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy","role":"TFEKSWorkshop-Worker-Role"},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy","mode":"managed","type":"aws_iam_role_policy_attachment","name":"node_AmazonEKS_CNI_Policy","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"policy_arn":"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy","role":"TFEKSWorkshop-Worker-Role"},"after_unknown":{"id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"aws_internet_gateway.this","mode":"managed","type":"aws_internet_gateway","name":"this","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"tags":{"Name":"TFEKSWorkshop-igw"},"tags_all":{"Name":"TFEKSWorkshop-igw"},"timeouts":null},"after_unknown":{"arn":true,"id":true,"owner_id":true,"tags":{},"tags_all":{},"vpc_id":true},"before_sensitive":false,"after_sensitive":{"tags":{},"tags_all":{}}}},{"address":"aws_nat_gateway.main","mode":"managed","type":"aws_nat_gateway","name":"main","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"connectivity_type":"public","tags":{"Name":"TFEKSWorkshop-ngw"},"tags_all":{"Name":"TFEKSWorkshop-ngw"}},"after_unknown":{"allocation_id":true,"association_id":true,"id":true,"network_interface_id":true,"private_ip":true,"public_ip":true,"subnet_id":true,"tags":{},"tags_all":{}},"before_sensitive":false,"after_sensitive":{"tags":{},"tags_all":{}}}},{"address":"aws_route.main","mode":"managed","type":"aws_route","name":"main","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"carrier_gateway_id":null,"core_network_arn":null,"destination_cidr_block":"0.0.0.0/0","destination_ipv6_cidr_block":null,"destination_prefix_list_id":null,"egress_only_gateway_id":null,"gateway_id":null,"local_gateway_id":null,"timeouts":null,"transit_gateway_id":null,"vpc_endpoint_id":null,"vpc_peering_connection_id":null},"after_unknown":{"id":true,"instance_id":true,"instance_owner_id":true,"nat_gateway_id":true,"network_interface_id":true,"origin":true,"route_table_id":true,"state":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"aws_route_table.main","mode":"managed","type":"aws_route_table","name":"main","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"route":[{"carrier_gateway_id":"","cidr_block":"0.0.0.0/0","core_network_arn":"","destination_prefix_list_id":"","egress_only_gateway_id":"","ipv6_cidr_block":"","local_gateway_id":"","nat_gateway_id":"","network_interface_id":"","transit_gateway_id":"","vpc_endpoint_id":"","vpc_peering_connection_id":""}],"tags":{"Name":"TFEKSWorkshop-Default-rt"},"tags_all":{"Name":"TFEKSWorkshop-Default-rt"},"timeouts":null},"after_unknown":{"arn":true,"id":true,"owner_id":true,"propagating_vgws":true,"route":[{"gateway_id":true}],"tags":{},"tags_all":{},"vpc_id":true},"before_sensitive":false,"after_sensitive":{"propagating_vgws":[],"route":[{}],"tags":{},"tags_all":{}}}},{"address":"aws_route_table_association.internet_access[0]","mode":"managed","type":"aws_route_table_association","name":"internet_access","index":0,"provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"gateway_id":null,"timeouts":null},"after_unknown":{"id":true,"route_table_id":true,"subnet_id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"aws_route_table_association.internet_access[1]","mode":"managed","type":"aws_route_table_association","name":"internet_access","index":1,"provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"gateway_id":null,"timeouts":null},"after_unknown":{"id":true,"route_table_id":true,"subnet_id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"aws_security_group.control_plane_sg","mode":"managed","type":"aws_security_group","name":"control_plane_sg","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"description":"Managed by Terraform","name":"TFEKSWorkshop-ControlPlane-sg","revoke_rules_on_delete":false,"tags":{"Name":"TFEKSWorkshop-ControlPlane-sg"},"tags_all":{"Name":"TFEKSWorkshop-ControlPlane-sg"},"timeouts":null},"after_unknown":{"arn":true,"egress":true,"id":true,"ingress":true,"name_prefix":true,"owner_id":true,"tags":{},"tags_all":{},"vpc_id":true},"before_sensitive":false,"after_sensitive":{"egress":[],"ingress":[],"tags":{},"tags_all":{}}}},{"address":"aws_security_group.data_plane_sg","mode":"managed","type":"aws_security_group","name":"data_plane_sg","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"description":"Managed by Terraform","name":"TFEKSWorkshop-Worker-sg","revoke_rules_on_delete":false,"tags":{"Name":"TFEKSWorkshop-Worker-sg"},"tags_all":{"Name":"TFEKSWorkshop-Worker-sg"},"timeouts":null},"after_unknown":{"arn":true,"egress":true,"id":true,"ingress":true,"name_prefix":true,"owner_id":true,"tags":{},"tags_all":{},"vpc_id":true},"before_sensitive":false,"after_sensitive":{"egress":[],"ingress":[],"tags":{},"tags_all":{}}}},{"address":"aws_security_group.eks_cluster","mode":"managed","type":"aws_security_group","name":"eks_cluster","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"description":"Cluster communication with worker nodes","name":"TFEKSWorkshop-cluster-sg","revoke_rules_on_delete":false,"tags":{"Name":"TFEKSWorkshop-cluster-sg"},"tags_all":{"Name":"TFEKSWorkshop-cluster-sg"},"timeouts":null},"after_unknown":{"arn":true,"egress":true,"id":true,"ingress":true,"name_prefix":true,"owner_id":true,"tags":{},"tags_all":{},"vpc_id":true},"before_sensitive":false,"after_sensitive":{"egress":[],"ingress":[],"tags":{},"tags_all":{}}}},{"address":"aws_security_group.eks_nodes","mode":"managed","type":"aws_security_group","name":"eks_nodes","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"description":"Security group for all nodes in the cluster","egress":[{"cidr_blocks":["0.0.0.0/0"],"description":"","from_port":0,"ipv6_cidr_blocks":[],"prefix_list_ids":[],"protocol":"-1","security_groups":[],"self":false,"to_port":0}],"name":"TFEKSWorkshop-node-sg","revoke_rules_on_delete":false,"tags":{"Name":"TFEKSWorkshop-node-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"owned"},"tags_all":{"Name":"TFEKSWorkshop-node-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"owned"},"timeouts":null},"after_unknown":{"arn":true,"egress":[{"cidr_blocks":[false],"ipv6_cidr_blocks":[],"prefix_list_ids":[],"security_groups":[]}],"id":true,"ingress":true,"name_prefix":true,"owner_id":true,"tags":{},"tags_all":{},"vpc_id":true},"before_sensitive":false,"after_sensitive":{"egress":[{"cidr_blocks":[false],"ipv6_cidr_blocks":[],"prefix_list_ids":[],"security_groups":[]}],"ingress":[],"tags":{},"tags_all":{}}}},{"address":"aws_security_group.public_sg","mode":"managed","type":"aws_security_group","name":"public_sg","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"description":"Managed by Terraform","name":"TFEKSWorkshop-Public-sg","revoke_rules_on_delete":false,"tags":{"Name":"TFEKSWorkshop-Public-sg"},"tags_all":{"Name":"TFEKSWorkshop-Public-sg"},"timeouts":null},"after_unknown":{"arn":true,"egress":true,"id":true,"ingress":true,"name_prefix":true,"owner_id":true,"tags":{},"tags_all":{},"vpc_id":true},"before_sensitive":false,"after_sensitive":{"egress":[],"ingress":[],"tags":{},"tags_all":{}}}},{"address":"aws_security_group_rule.cluster_inbound","mode":"managed","type":"aws_security_group_rule","name":"cluster_inbound","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":null,"description":"Allow worker nodes to communicate with the cluster API Server","from_port":443,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":443,"type":"ingress"},"after_unknown":{"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"aws_security_group_rule.cluster_outbound","mode":"managed","type":"aws_security_group_rule","name":"cluster_outbound","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":null,"description":"Allow cluster API Server to communicate with the worker nodes","from_port":1024,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":65535,"type":"egress"},"after_unknown":{"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"aws_security_group_rule.control_plane_inbound","mode":"managed","type":"aws_security_group_rule","name":"control_plane_inbound","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":["10.0.0.0/24","10.0.1.0/24","10.0.2.0/24","10.0.3.0/24"],"description":null,"from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":65535,"type":"ingress"},"after_unknown":{"cidr_blocks":[false,false,false,false],"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{"cidr_blocks":[false,false,false,false]}}},{"address":"aws_security_group_rule.control_plane_outbound","mode":"managed","type":"aws_security_group_rule","name":"control_plane_outbound","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":["0.0.0.0/0"],"description":null,"from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"-1","self":false,"timeouts":null,"to_port":65535,"type":"egress"},"after_unknown":{"cidr_blocks":[false],"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{"cidr_blocks":[false]}}},{"address":"aws_security_group_rule.node_outbound","mode":"managed","type":"aws_security_group_rule","name":"node_outbound","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":["0.0.0.0/0"],"description":null,"from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"-1","self":false,"timeouts":null,"to_port":0,"type":"egress"},"after_unknown":{"cidr_blocks":[false],"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{"cidr_blocks":[false]}}},{"address":"aws_security_group_rule.nodes","mode":"managed","type":"aws_security_group_rule","name":"nodes","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":["10.0.0.0/24","10.0.1.0/24","10.0.2.0/24","10.0.3.0/24"],"description":"Allow nodes to communicate with each other","from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"-1","self":false,"timeouts":null,"to_port":65535,"type":"ingress"},"after_unknown":{"cidr_blocks":[false,false,false,false],"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{"cidr_blocks":[false,false,false,false]}}},{"address":"aws_security_group_rule.nodes_cluster_inbound","mode":"managed","type":"aws_security_group_rule","name":"nodes_cluster_inbound","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":null,"description":"Allow worker Kubelets and pods to receive communication from the cluster control plane","from_port":1025,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":65535,"type":"ingress"},"after_unknown":{"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"aws_security_group_rule.nodes_inbound","mode":"managed","type":"aws_security_group_rule","name":"nodes_inbound","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":["10.0.2.0/24","10.0.3.0/24"],"description":"Allow worker Kubelets and pods to receive communication from the cluster control plane","from_port":1025,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":65535,"type":"ingress"},"after_unknown":{"cidr_blocks":[false,false],"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{"cidr_blocks":[false,false]}}},{"address":"aws_security_group_rule.nodes_internal","mode":"managed","type":"aws_security_group_rule","name":"nodes_internal","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":null,"description":"Allow nodes to communicate with each other","from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"-1","self":false,"timeouts":null,"to_port":65535,"type":"ingress"},"after_unknown":{"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{}}},{"address":"aws_security_group_rule.sg_egress_public","mode":"managed","type":"aws_security_group_rule","name":"sg_egress_public","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":["0.0.0.0/0"],"description":null,"from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"-1","self":false,"timeouts":null,"to_port":0,"type":"egress"},"after_unknown":{"cidr_blocks":[false],"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{"cidr_blocks":[false]}}},{"address":"aws_security_group_rule.sg_ingress_public_443","mode":"managed","type":"aws_security_group_rule","name":"sg_ingress_public_443","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":["0.0.0.0/0"],"description":null,"from_port":443,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":443,"type":"ingress"},"after_unknown":{"cidr_blocks":[false],"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{"cidr_blocks":[false]}}},{"address":"aws_security_group_rule.sg_ingress_public_80","mode":"managed","type":"aws_security_group_rule","name":"sg_ingress_public_80","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"cidr_blocks":["0.0.0.0/0"],"description":null,"from_port":80,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"tcp","self":false,"timeouts":null,"to_port":80,"type":"ingress"},"after_unknown":{"cidr_blocks":[false],"id":true,"security_group_id":true,"security_group_rule_id":true,"source_security_group_id":true},"before_sensitive":false,"after_sensitive":{"cidr_blocks":[false]}}},{"address":"aws_subnet.private[0]","mode":"managed","type":"aws_subnet","name":"private","index":0,"provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"assign_ipv6_address_on_creation":false,"availability_zone":"us-west-2a","cidr_block":"10.0.2.0/24","customer_owned_ipv4_pool":null,"enable_dns64":false,"enable_lni_at_device_index":null,"enable_resource_name_dns_a_record_on_launch":false,"enable_resource_name_dns_aaaa_record_on_launch":false,"ipv6_cidr_block":null,"ipv6_native":false,"map_customer_owned_ip_on_launch":null,"map_public_ip_on_launch":false,"outpost_arn":null,"tags":{"Name":"TFEKSWorkshop-private-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/internal-elb":"1"},"tags_all":{"Name":"TFEKSWorkshop-private-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/internal-elb":"1"},"timeouts":null},"after_unknown":{"arn":true,"availability_zone_id":true,"id":true,"ipv6_cidr_block_association_id":true,"owner_id":true,"private_dns_hostname_type_on_launch":true,"tags":{},"tags_all":{},"vpc_id":true},"before_sensitive":false,"after_sensitive":{"tags":{},"tags_all":{}}}},{"address":"aws_subnet.private[1]","mode":"managed","type":"aws_subnet","name":"private","index":1,"provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"assign_ipv6_address_on_creation":false,"availability_zone":"us-west-2b","cidr_block":"10.0.3.0/24","customer_owned_ipv4_pool":null,"enable_dns64":false,"enable_lni_at_device_index":null,"enable_resource_name_dns_a_record_on_launch":false,"enable_resource_name_dns_aaaa_record_on_launch":false,"ipv6_cidr_block":null,"ipv6_native":false,"map_customer_owned_ip_on_launch":null,"map_public_ip_on_launch":false,"outpost_arn":null,"tags":{"Name":"TFEKSWorkshop-private-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/internal-elb":"1"},"tags_all":{"Name":"TFEKSWorkshop-private-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/internal-elb":"1"},"timeouts":null},"after_unknown":{"arn":true,"availability_zone_id":true,"id":true,"ipv6_cidr_block_association_id":true,"owner_id":true,"private_dns_hostname_type_on_launch":true,"tags":{},"tags_all":{},"vpc_id":true},"before_sensitive":false,"after_sensitive":{"tags":{},"tags_all":{}}}},{"address":"aws_subnet.public[0]","mode":"managed","type":"aws_subnet","name":"public","index":0,"provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"assign_ipv6_address_on_creation":false,"availability_zone":"us-west-2a","cidr_block":"10.0.0.0/24","customer_owned_ipv4_pool":null,"enable_dns64":false,"enable_lni_at_device_index":null,"enable_resource_name_dns_a_record_on_launch":false,"enable_resource_name_dns_aaaa_record_on_launch":false,"ipv6_cidr_block":null,"ipv6_native":false,"map_customer_owned_ip_on_launch":null,"map_public_ip_on_launch":true,"outpost_arn":null,"tags":{"Name":"TFEKSWorkshop-public-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/elb":"1"},"tags_all":{"Name":"TFEKSWorkshop-public-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/elb":"1"},"timeouts":null},"after_unknown":{"arn":true,"availability_zone_id":true,"id":true,"ipv6_cidr_block_association_id":true,"owner_id":true,"private_dns_hostname_type_on_launch":true,"tags":{},"tags_all":{},"vpc_id":true},"before_sensitive":false,"after_sensitive":{"tags":{},"tags_all":{}}}},{"address":"aws_subnet.public[1]","mode":"managed","type":"aws_subnet","name":"public","index":1,"provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"assign_ipv6_address_on_creation":false,"availability_zone":"us-west-2b","cidr_block":"10.0.1.0/24","customer_owned_ipv4_pool":null,"enable_dns64":false,"enable_lni_at_device_index":null,"enable_resource_name_dns_a_record_on_launch":false,"enable_resource_name_dns_aaaa_record_on_launch":false,"ipv6_cidr_block":null,"ipv6_native":false,"map_customer_owned_ip_on_launch":null,"map_public_ip_on_launch":true,"outpost_arn":null,"tags":{"Name":"TFEKSWorkshop-public-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/elb":"1"},"tags_all":{"Name":"TFEKSWorkshop-public-sg","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared","kubernetes.io/role/elb":"1"},"timeouts":null},"after_unknown":{"arn":true,"availability_zone_id":true,"id":true,"ipv6_cidr_block_association_id":true,"owner_id":true,"private_dns_hostname_type_on_launch":true,"tags":{},"tags_all":{},"vpc_id":true},"before_sensitive":false,"after_sensitive":{"tags":{},"tags_all":{}}}},{"address":"aws_vpc.this","mode":"managed","type":"aws_vpc","name":"this","provider_name":"registry.terraform.io/hashicorp/aws","change":{"actions":["create"],"before":null,"after":{"assign_generated_ipv6_cidr_block":null,"cidr_block":"10.0.0.0/16","enable_dns_hostnames":true,"enable_dns_support":true,"instance_tenancy":"default","ipv4_ipam_pool_id":null,"ipv4_netmask_length":null,"ipv6_ipam_pool_id":null,"ipv6_netmask_length":null,"tags":{"Name":"TFEKSWorkshop-vpc","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared"},"tags_all":{"Name":"TFEKSWorkshop-vpc","kubernetes.io/cluster/TFEKSWorkshop-cluster":"shared"}},"after_unknown":{"arn":true,"default_network_acl_id":true,"default_route_table_id":true,"default_security_group_id":true,"dhcp_options_id":true,"enable_network_address_usage_metrics":true,"id":true,"ipv6_association_id":true,"ipv6_cidr_block":true,"ipv6_cidr_block_network_border_group":true,"main_route_table_id":true,"owner_id":true,"tags":{},"tags_all":{}},"before_sensitive":false,"after_sensitive":{"tags":{},"tags_all":{}}}}],"output_changes":{"cluster_ca_certificate":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":false,"after_sensitive":false},"cluster_endpoint":{"actions":["create"],"before":null,"after_unknown":true,"before_sensitive":false,"after_sensitive":false},"cluster_name":{"actions":["create"],"before":null,"after":"TFEKSWorkshop-cluster","after_unknown":false,"before_sensitive":false,"after_sensitive":false}},"prior_state":{"format_version":"1.0","terraform_version":"1.5.0","values":{"outputs":{"cluster_name":{"sensitive":false,"value":"TFEKSWorkshop-cluster","type":"string"}},"root_module":{"resources":[{"address":"data.aws_availability_zones.available","mode":"data","type":"aws_availability_zones","name":"available","provider_name":"registry.terraform.io/hashicorp/aws","schema_version":0,"values":{"all_availability_zones":null,"exclude_names":null,"exclude_zone_ids":null,"filter":null,"group_names":["us-west-2"],"id":"us-west-2","names":["us-west-2a","us-west-2b","us-west-2c","us-west-2d"],"state":"available","timeouts":null,"zone_ids":["usw2-az1","usw2-az2","usw2-az3","usw2-az4"]},"sensitive_values":{"group_names":[false],"names":[false,false,false,false],"zone_ids":[false,false,false,false]}}]}}},"configuration":{"provider_config":{"aws":{"name":"aws","full_name":"registry.terraform.io/hashicorp/aws","expressions":{"access_key":{"references":["var.aws_access_key"]},"region":{"references":["var.region"]},"secret_key":{"references":["var.aws_secret_key"]}}}},"root_module":{"outputs":{"cluster_ca_certificate":{"expression":{"references":["aws_eks_cluster.this.certificate_authority[0].data","aws_eks_cluster.this.certificate_authority[0]","aws_eks_cluster.this.certificate_authority","aws_eks_cluster.this"]}},"cluster_endpoint":{"expression":{"references":["aws_eks_cluster.this.endpoint","aws_eks_cluster.this"]}},"cluster_name":{"expression":{"references":["aws_eks_cluster.this.name","aws_eks_cluster.this"]}}},"resources":[{"address":"aws_eip.main","mode":"managed","type":"aws_eip","name":"main","provider_config_key":"aws","expressions":{"tags":{"references":["var.project"]}},"schema_version":0},{"address":"aws_eks_cluster.this","mode":"managed","type":"aws_eks_cluster","name":"this","provider_config_key":"aws","expressions":{"name":{"references":["var.project"]},"role_arn":{"references":["aws_iam_role.cluster.arn","aws_iam_role.cluster"]},"tags":{"references":["var.tags"]},"version":{"constant_value":"1.21"},"vpc_config":[{"endpoint_private_access":{"constant_value":true},"endpoint_public_access":{"constant_value":true},"public_access_cidrs":{"constant_value":["0.0.0.0/0"]},"subnet_ids":{"references":["aws_subnet.public","aws_subnet.private"]}}]},"schema_version":0,"depends_on":["aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy"]},{"address":"aws_eks_node_group.mynodeGroup","mode":"managed","type":"aws_eks_node_group","name":"mynodeGroup","provider_config_key":"aws","expressions":{"ami_type":{"constant_value":"AL2_x86_64"},"capacity_type":{"constant_value":"ON_DEMAND"},"cluster_name":{"references":["aws_eks_cluster.this.name","aws_eks_cluster.this"]},"disk_size":{"constant_value":20},"instance_types":{"constant_value":["t2.medium"]},"node_group_name":{"references":["var.project"]},"node_role_arn":{"references":["aws_iam_role.node.arn","aws_iam_role.node"]},"scaling_config":[{"desired_size":{"constant_value":2},"max_size":{"constant_value":5},"min_size":{"constant_value":1}}],"subnet_ids":{"references":["aws_subnet.private"]},"tags":{"references":["var.tags"]}},"schema_version":0,"depends_on":["aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy","aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy","aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly"]},{"address":"aws_iam_role.cluster","mode":"managed","type":"aws_iam_role","name":"cluster","provider_config_key":"aws","expressions":{"assume_role_policy":{"constant_value":"{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n"},"name":{"references":["var.project"]}},"schema_version":0},{"address":"aws_iam_role.node","mode":"managed","type":"aws_iam_role","name":"node","provider_config_key":"aws","expressions":{"assume_role_policy":{"constant_value":"{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n"},"name":{"references":["var.project"]}},"schema_version":0},{"address":"aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy","mode":"managed","type":"aws_iam_role_policy_attachment","name":"cluster_AmazonEKSClusterPolicy","provider_config_key":"aws","expressions":{"policy_arn":{"constant_value":"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"},"role":{"references":["aws_iam_role.cluster.name","aws_iam_role.cluster"]}},"schema_version":0},{"address":"aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly","mode":"managed","type":"aws_iam_role_policy_attachment","name":"node_AmazonEC2ContainerRegistryReadOnly","provider_config_key":"aws","expressions":{"policy_arn":{"constant_value":"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"},"role":{"references":["aws_iam_role.node.name","aws_iam_role.node"]}},"schema_version":0},{"address":"aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy","mode":"managed","type":"aws_iam_role_policy_attachment","name":"node_AmazonEKSWorkerNodePolicy","provider_config_key":"aws","expressions":{"policy_arn":{"references":["local.default_config[\"policy_arn\"]","local.default_config"]},"role":{"references":["aws_iam_role.node.name","aws_iam_role.node"]}},"schema_version":0},{"address":"aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy","mode":"managed","type":"aws_iam_role_policy_attachment","name":"node_AmazonEKS_CNI_Policy","provider_config_key":"aws","expressions":{"policy_arn":{"constant_value":"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"},"role":{"references":["aws_iam_role.node.name","aws_iam_role.node"]}},"schema_version":0},{"address":"aws_internet_gateway.this","mode":"managed","type":"aws_internet_gateway","name":"this","provider_config_key":"aws","expressions":{"tags":{"references":["var.project"]},"vpc_id":{"references":["aws_vpc.this.id","aws_vpc.this"]}},"schema_version":0,"depends_on":["aws_vpc.this"]},{"address":"aws_nat_gateway.main","mode":"managed","type":"aws_nat_gateway","name":"main","provider_config_key":"aws","expressions":{"allocation_id":{"references":["aws_eip.main.id","aws_eip.main"]},"subnet_id":{"references":["aws_subnet.public[0].id","aws_subnet.public[0]","aws_subnet.public"]},"tags":{"references":["var.project"]}},"schema_version":0},{"address":"aws_route.main","mode":"managed","type":"aws_route","name":"main","provider_config_key":"aws","expressions":{"destination_cidr_block":{"constant_value":"0.0.0.0/0"},"nat_gateway_id":{"references":["aws_nat_gateway.main.id","aws_nat_gateway.main"]},"route_table_id":{"references":["aws_vpc.this.default_route_table_id","aws_vpc.this"]}},"schema_version":0},{"address":"aws_route_table.main","mode":"managed","type":"aws_route_table","name":"main","provider_config_key":"aws","expressions":{"route":{"references":["aws_internet_gateway.this.id","aws_internet_gateway.this"]},"tags":{"references":["var.project"]},"vpc_id":{"references":["aws_vpc.this.id","aws_vpc.this"]}},"schema_version":0},{"address":"aws_route_table_association.internet_access","mode":"managed","type":"aws_route_table_association","name":"internet_access","provider_config_key":"aws","expressions":{"route_table_id":{"references":["aws_route_table.main.id","aws_route_table.main"]},"subnet_id":{"references":["aws_subnet.public","count.index"]}},"schema_version":0,"count_expression":{"references":["var.availability_zones_count"]}},{"address":"aws_security_group.control_plane_sg","mode":"managed","type":"aws_security_group","name":"control_plane_sg","provider_config_key":"aws","expressions":{"name":{"references":["var.project"]},"tags":{"references":["var.project"]},"vpc_id":{"references":["aws_vpc.this.id","aws_vpc.this"]}},"schema_version":1},{"address":"aws_security_group.data_plane_sg","mode":"managed","type":"aws_security_group","name":"data_plane_sg","provider_config_key":"aws","expressions":{"name":{"references":["var.project"]},"tags":{"references":["var.project"]},"vpc_id":{"references":["aws_vpc.this.id","aws_vpc.this"]}},"schema_version":1},{"address":"aws_security_group.eks_cluster","mode":"managed","type":"aws_security_group","name":"eks_cluster","provider_config_key":"aws","expressions":{"description":{"constant_value":"Cluster communication with worker nodes"},"name":{"references":["var.project"]},"tags":{"references":["var.project"]},"vpc_id":{"references":["aws_vpc.this.id","aws_vpc.this"]}},"schema_version":1},{"address":"aws_security_group.eks_nodes","mode":"managed","type":"aws_security_group","name":"eks_nodes","provider_config_key":"aws","expressions":{"description":{"constant_value":"Security group for all nodes in the cluster"},"egress":{"constant_value":[{"cidr_blocks":["0.0.0.0/0"],"description":null,"from_port":0,"ipv6_cidr_blocks":null,"prefix_list_ids":null,"protocol":"-1","security_groups":null,"self":null,"to_port":0}]},"name":{"references":["var.project"]},"tags":{"references":["var.project","var.project"]},"vpc_id":{"references":["aws_vpc.this.id","aws_vpc.this"]}},"schema_version":1},{"address":"aws_security_group.public_sg","mode":"managed","type":"aws_security_group","name":"public_sg","provider_config_key":"aws","expressions":{"name":{"references":["var.project"]},"tags":{"references":["var.project"]},"vpc_id":{"references":["aws_vpc.this.id","aws_vpc.this"]}},"schema_version":1},{"address":"aws_security_group_rule.cluster_inbound","mode":"managed","type":"aws_security_group_rule","name":"cluster_inbound","provider_config_key":"aws","expressions":{"description":{"constant_value":"Allow worker nodes to communicate with the cluster API Server"},"from_port":{"constant_value":443},"protocol":{"constant_value":"tcp"},"security_group_id":{"references":["aws_security_group.eks_cluster.id","aws_security_group.eks_cluster"]},"source_security_group_id":{"references":["aws_security_group.eks_nodes.id","aws_security_group.eks_nodes"]},"to_port":{"constant_value":443},"type":{"constant_value":"ingress"}},"schema_version":2},{"address":"aws_security_group_rule.cluster_outbound","mode":"managed","type":"aws_security_group_rule","name":"cluster_outbound","provider_config_key":"aws","expressions":{"description":{"constant_value":"Allow cluster API Server to communicate with the worker nodes"},"from_port":{"constant_value":1024},"protocol":{"constant_value":"tcp"},"security_group_id":{"references":["aws_security_group.eks_cluster.id","aws_security_group.eks_cluster"]},"source_security_group_id":{"references":["aws_security_group.eks_nodes.id","aws_security_group.eks_nodes"]},"to_port":{"constant_value":65535},"type":{"constant_value":"egress"}},"schema_version":2},{"address":"aws_security_group_rule.control_plane_inbound","mode":"managed","type":"aws_security_group_rule","name":"control_plane_inbound","provider_config_key":"aws","expressions":{"cidr_blocks":{"references":["var.vpc_cidr","var.subnet_cidr_bits","var.vpc_cidr","var.subnet_cidr_bits","var.vpc_cidr","var.subnet_cidr_bits","var.vpc_cidr","var.subnet_cidr_bits"]},"from_port":{"constant_value":0},"protocol":{"constant_value":"tcp"},"security_group_id":{"references":["aws_security_group.control_plane_sg.id","aws_security_group.control_plane_sg"]},"to_port":{"constant_value":65535},"type":{"constant_value":"ingress"}},"schema_version":2},{"address":"aws_security_group_rule.control_plane_outbound","mode":"managed","type":"aws_security_group_rule","name":"control_plane_outbound","provider_config_key":"aws","expressions":{"cidr_blocks":{"constant_value":["0.0.0.0/0"]},"from_port":{"constant_value":0},"protocol":{"constant_value":"-1"},"security_group_id":{"references":["aws_security_group.control_plane_sg.id","aws_security_group.control_plane_sg"]},"to_port":{"constant_value":65535},"type":{"constant_value":"egress"}},"schema_version":2},{"address":"aws_security_group_rule.node_outbound","mode":"managed","type":"aws_security_group_rule","name":"node_outbound","provider_config_key":"aws","expressions":{"cidr_blocks":{"constant_value":["0.0.0.0/0"]},"from_port":{"constant_value":0},"protocol":{"constant_value":"-1"},"security_group_id":{"references":["aws_security_group.data_plane_sg.id","aws_security_group.data_plane_sg"]},"to_port":{"constant_value":0},"type":{"constant_value":"egress"}},"schema_version":2},{"address":"aws_security_group_rule.nodes","mode":"managed","type":"aws_security_group_rule","name":"nodes","provider_config_key":"aws","expressions":{"cidr_blocks":{"references":["var.vpc_cidr","var.subnet_cidr_bits","var.vpc_cidr","var.subnet_cidr_bits","var.vpc_cidr","var.subnet_cidr_bits","var.vpc_cidr","var.subnet_cidr_bits"]},"description":{"constant_value":"Allow nodes to communicate with each other"},"from_port":{"constant_value":0},"protocol":{"constant_value":"-1"},"security_group_id":{"references":["aws_security_group.data_plane_sg.id","aws_security_group.data_plane_sg"]},"to_port":{"constant_value":65535},"type":{"constant_value":"ingress"}},"schema_version":2},{"address":"aws_security_group_rule.nodes_cluster_inbound","mode":"managed","type":"aws_security_group_rule","name":"nodes_cluster_inbound","provider_config_key":"aws","expressions":{"description":{"constant_value":"Allow worker Kubelets and pods to receive communication from the cluster control plane"},"from_port":{"constant_value":1025},"protocol":{"constant_value":"tcp"},"security_group_id":{"references":["aws_security_group.eks_nodes.id","aws_security_group.eks_nodes"]},"source_security_group_id":{"references":["aws_security_group.eks_cluster.id","aws_security_group.eks_cluster"]},"to_port":{"constant_value":65535},"type":{"constant_value":"ingress"}},"schema_version":2},{"address":"aws_security_group_rule.nodes_inbound","mode":"managed","type":"aws_security_group_rule","name":"nodes_inbound","provider_config_key":"aws","expressions":{"cidr_blocks":{"references":["var.vpc_cidr","var.subnet_cidr_bits","var.vpc_cidr","var.subnet_cidr_bits"]},"description":{"constant_value":"Allow worker Kubelets and pods to receive communication from the cluster control plane"},"from_port":{"constant_value":1025},"protocol":{"constant_value":"tcp"},"security_group_id":{"references":["aws_security_group.data_plane_sg.id","aws_security_group.data_plane_sg"]},"to_port":{"constant_value":65535},"type":{"constant_value":"ingress"}},"schema_version":2},{"address":"aws_security_group_rule.nodes_internal","mode":"managed","type":"aws_security_group_rule","name":"nodes_internal","provider_config_key":"aws","expressions":{"description":{"constant_value":"Allow nodes to communicate with each other"},"from_port":{"constant_value":0},"protocol":{"constant_value":"-1"},"security_group_id":{"references":["aws_security_group.eks_nodes.id","aws_security_group.eks_nodes"]},"source_security_group_id":{"references":["aws_security_group.eks_nodes.id","aws_security_group.eks_nodes"]},"to_port":{"constant_value":65535},"type":{"constant_value":"ingress"}},"schema_version":2},{"address":"aws_security_group_rule.sg_egress_public","mode":"managed","type":"aws_security_group_rule","name":"sg_egress_public","provider_config_key":"aws","expressions":{"cidr_blocks":{"constant_value":["0.0.0.0/0"]},"from_port":{"constant_value":0},"protocol":{"constant_value":"-1"},"security_group_id":{"references":["aws_security_group.public_sg.id","aws_security_group.public_sg"]},"to_port":{"constant_value":0},"type":{"constant_value":"egress"}},"schema_version":2},{"address":"aws_security_group_rule.sg_ingress_public_443","mode":"managed","type":"aws_security_group_rule","name":"sg_ingress_public_443","provider_config_key":"aws","expressions":{"cidr_blocks":{"constant_value":["0.0.0.0/0"]},"from_port":{"constant_value":443},"protocol":{"constant_value":"tcp"},"security_group_id":{"references":["aws_security_group.public_sg.id","aws_security_group.public_sg"]},"to_port":{"constant_value":443},"type":{"constant_value":"ingress"}},"schema_version":2},{"address":"aws_security_group_rule.sg_ingress_public_80","mode":"managed","type":"aws_security_group_rule","name":"sg_ingress_public_80","provider_config_key":"aws","expressions":{"cidr_blocks":{"constant_value":["0.0.0.0/0"]},"from_port":{"constant_value":80},"protocol":{"constant_value":"tcp"},"security_group_id":{"references":["aws_security_group.public_sg.id","aws_security_group.public_sg"]},"to_port":{"constant_value":80},"type":{"constant_value":"ingress"}},"schema_version":2},{"address":"aws_subnet.private","mode":"managed","type":"aws_subnet","name":"private","provider_config_key":"aws","expressions":{"availability_zone":{"references":["data.aws_availability_zones.available.names","data.aws_availability_zones.available","count.index"]},"cidr_block":{"references":["var.vpc_cidr","var.subnet_cidr_bits","count.index","var.availability_zones_count"]},"tags":{"references":["var.project","var.project"]},"vpc_id":{"references":["aws_vpc.this.id","aws_vpc.this"]}},"schema_version":1,"count_expression":{"references":["var.availability_zones_count"]}},{"address":"aws_subnet.public","mode":"managed","type":"aws_subnet","name":"public","provider_config_key":"aws","expressions":{"availability_zone":{"references":["data.aws_availability_zones.available.names","data.aws_availability_zones.available","count.index"]},"cidr_block":{"references":["var.vpc_cidr","var.subnet_cidr_bits","count.index"]},"map_public_ip_on_launch":{"constant_value":true},"tags":{"references":["var.project","var.project"]},"vpc_id":{"references":["aws_vpc.this.id","aws_vpc.this"]}},"schema_version":1,"count_expression":{"references":["var.availability_zones_count"]}},{"address":"aws_vpc.this","mode":"managed","type":"aws_vpc","name":"this","provider_config_key":"aws","expressions":{"cidr_block":{"references":["var.vpc_cidr"]},"enable_dns_hostnames":{"constant_value":true},"enable_dns_support":{"constant_value":true},"tags":{"references":["var.project","var.project"]}},"schema_version":1},{"address":"data.aws_availability_zones.available","mode":"data","type":"aws_availability_zones","name":"available","provider_config_key":"aws","expressions":{"state":{"constant_value":"available"}},"schema_version":0}],"variables":{"availability_zones_count":{"default":2,"description":"The number of AZs."},"aws_access_key":{"description":"AWS access key"},"aws_secret_key":{"description":"AWS secret key"},"project":{"description":"rbc_strategy"},"region":{"default":"us-east-1","description":"The aws region. https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html"},"subnet_cidr_bits":{"default":8,"description":"The number of subnet bits for the CIDR. For example, specifying a value 8 for this parameter will create a CIDR with a mask of /24."},"tags":{"default":{"Environment":"Development","Owner":"Ayon Choudhury","Project":"TerraformEKSWorkshop"},"description":"A map of tags to add to all resources"},"vpc_cidr":{"default":"10.0.0.0/16","description":"The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden"}}}},"relevant_attributes":[{"resource":"aws_iam_role.node","attribute":["name"]},{"resource":"aws_security_group.public_sg","attribute":["id"]},{"resource":"data.aws_availability_zones.available","attribute":["names"]},{"resource":"aws_eip.main","attribute":["id"]},{"resource":"aws_iam_role.cluster","attribute":["arn"]},{"resource":"aws_subnet.private","attribute":[]},{"resource":"aws_eks_cluster.this","attribute":["name"]},{"resource":"aws_eks_cluster.this","attribute":["certificate_authority",0,"data"]},{"resource":"aws_security_group.eks_nodes","attribute":["id"]},{"resource":"aws_security_group.eks_cluster","attribute":["id"]},{"resource":"aws_subnet.public","attribute":[]},{"resource":"aws_subnet.public[0]","attribute":["id"]},{"resource":"aws_iam_role.cluster","attribute":["name"]},{"resource":"aws_vpc.this","attribute":["id"]},{"resource":"aws_security_group.control_plane_sg","attribute":["id"]},{"resource":"aws_security_group.data_plane_sg","attribute":["id"]},{"resource":"aws_vpc.this","attribute":["default_route_table_id"]},{"resource":"aws_internet_gateway.this","attribute":["id"]},{"resource":"aws_route_table.main","attribute":["id"]},{"resource":"aws_nat_gateway.main","attribute":["id"]},{"resource":"aws_iam_role.node","attribute":["arn"]},{"resource":"aws_eks_cluster.this","attribute":["endpoint"]}],"checks":[{"address":{"kind":"resource","mode":"managed","name":"mynodeGroup","to_display":"aws_eks_node_group.mynodeGroup","type":"aws_eks_node_group"},"status":"pass","instances":[{"address":{"to_display":"aws_eks_node_group.mynodeGroup"},"status":"pass"}]}],"timestamp":"2023-07-04T19:16:50Z"}
&{{1.2 1.5.0 map[availability_zones_count:0xc00017a080 aws_access_key:0xc00017a0a0 aws_secret_key:0xc00017a0d0 project:0xc00017a100 region:0xc00017a130 subnet_cidr_bits:0xc00017a160 tags:0xc00017a180 vpc_cidr:0xc00017a1d0] 0xc00017a200 [0xc00016a120 0xc00016a1b0 0xc00016a2d0 0xc00016a360 0xc00016a3f0 0xc00016a480 0xc00016a510 0xc00016a5a0 0xc00016a630 0xc00016a6c0 0xc00016a750 0xc00016a7e0 0xc00016a870 0xc00016a900 0xc00016a990 0xc00016aa20 0xc00016aab0 0xc00016ab40 0xc00016abd0 0xc00016ac60 0xc00016acf0 0xc00016ad80 0xc00016ae10 0xc00016aea0 0xc00016af30 0xc00016afc0 0xc00016b050 0xc00016b0e0 0xc00016b170 0xc00016b200 0xc00016b290 0xc00016b320 0xc00016b3b0 0xc00016b440 0xc00016b4d0 0xc00016b560 0xc00016b5f0] map[cluster_ca_certificate:0xc0003c33b0 cluster_endpoint:0xc0003c3420 cluster_name:0xc0003c3490] 0xc000145d70 0xc0002aefc0} map[aws_eip.main:0xc00017c000 aws_eks_cluster.this:0xc00017c0c0 aws_eks_node_group.mynodeGroup:0xc00017c180 aws_iam_role.cluster:0xc00017c240 aws_iam_role.node:0xc0007da000 aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy:0xc0007da0c0 aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly:0xc0007da180 aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy:0xc0007da240 aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy:0xc0007da300 aws_internet_gateway.this:0xc0007da3c0 aws_nat_gateway.main:0xc0007da480 aws_route.main:0xc0007da540 aws_route_table.main:0xc0007da600 aws_route_table_association.internet_access[0]:0xc0007da6c0 aws_route_table_association.internet_access[1]:0xc0007da780 aws_security_group.control_plane_sg:0xc0007da840 aws_security_group.data_plane_sg:0xc0007da900 aws_security_group.eks_cluster:0xc0007da9c0 aws_security_group.eks_nodes:0xc0007daa80 aws_security_group.public_sg:0xc00017c300 aws_security_group_rule.cluster_inbound:0xc00017c3c0 aws_security_group_rule.cluster_outbound:0xc0007dab40 aws_security_group_rule.control_plane_inbound:0xc0007dac00 aws_security_group_rule.control_plane_outbound:0xc0007dacc0 aws_security_group_rule.node_outbound:0xc0007dad80 aws_security_group_rule.nodes:0xc0007dae40 aws_security_group_rule.nodes_cluster_inbound:0xc0007daf00 aws_security_group_rule.nodes_inbound:0xc0007dafc0 aws_security_group_rule.nodes_internal:0xc0007db080 aws_security_group_rule.sg_egress_public:0xc0007db140 aws_security_group_rule.sg_ingress_public_443:0xc0007db200 aws_security_group_rule.sg_ingress_public_80:0xc0007db2c0 aws_subnet.private[0]:0xc0007db380 aws_subnet.private[1]:0xc0007db440 aws_subnet.public[0]:0xc0007db500 aws_subnet.public[1]:0xc0007db5c0 aws_vpc.this:0xc0007db680] map[aws_eip.main:0xc00016a120 aws_eks_cluster.this:0xc00016a1b0 aws_eks_node_group.mynodeGroup:0xc00016a2d0 aws_iam_role.cluster:0xc00016a360 aws_iam_role.node:0xc00016a3f0 aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy:0xc00016a480 aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly:0xc00016a510 aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy:0xc00016a5a0 aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy:0xc00016a630 aws_internet_gateway.this:0xc00016a6c0 aws_nat_gateway.main:0xc00016a750 aws_route.main:0xc00016a7e0 aws_route_table.main:0xc00016a870 aws_route_table_association.internet_access[0]:0xc00016a900 aws_route_table_association.internet_access[1]:0xc00016a990 aws_security_group.control_plane_sg:0xc00016aa20 aws_security_group.data_plane_sg:0xc00016aab0 aws_security_group.eks_cluster:0xc00016ab40 aws_security_group.eks_nodes:0xc00016abd0 aws_security_group.public_sg:0xc00016ac60 aws_security_group_rule.cluster_inbound:0xc00016acf0 aws_security_group_rule.cluster_outbound:0xc00016ad80 aws_security_group_rule.control_plane_inbound:0xc00016ae10 aws_security_group_rule.control_plane_outbound:0xc00016aea0 aws_security_group_rule.node_outbound:0xc00016af30 aws_security_group_rule.nodes:0xc00016afc0 aws_security_group_rule.nodes_cluster_inbound:0xc00016b050 aws_security_group_rule.nodes_inbound:0xc00016b0e0 aws_security_group_rule.nodes_internal:0xc00016b170 aws_security_group_rule.sg_egress_public:0xc00016b200 aws_security_group_rule.sg_ingress_public_443:0xc00016b290 aws_security_group_rule.sg_ingress_public_80:0xc00016b320 aws_subnet.private[0]:0xc00016b3b0 aws_subnet.private[1]:0xc00016b440 aws_subnet.public[0]:0xc00016b4d0 aws_subnet.public[1]:0xc00016b560 aws_vpc.this:0xc00016b5f0]}
PASS
ok  	vpcTests	8.637s
